{"ast":null,"code":"import { API } from '../config';\nimport axios from 'axios';\nimport client from '../Client';\nexport const createCategory = async category => {\n  const payload = category;\n  try {\n    const url = `${API}/category`;\n    const response = await client.post(url, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const statusCategories = async (category, code, accessToken) => {\n  const payload = category;\n  try {\n    const response = await client.put(`${API}/category/${code}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n  // .then(response => {\n  //     return response.json();\n  // })\n};\n\nexport const StatusCategories = async (category, code, accessToken) => {\n  const payload = category;\n  try {\n    const response = await client.put(`${API}/category/${code}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getCategoryBycode = async (code, category, accessToken) => {\n  const payload = JSON.stringify(category);\n  try {\n    const response = await client.get(`${API}/category/${code}`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const CreateSubCategory = async (code, category, accessToken) => {\n  const payload = category;\n  try {\n    const response = await client.post(`${API}/category/${code}/subcategory`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const statusCategory = async (category, code, subcode, accessToken) => {\n  const payload = category;\n  try {\n    const response = await client.put(`${API}/category/${code}/subcategory/${subcode}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const statusChangeCategory = async (category, code, subcode, accessToken) => {\n  const payload = category;\n  try {\n    const response = await client.put(`${API}/category/${code}/subcategory/${subcode}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateCategory = async (category, code, accessToken) => {\n  const payload = category;\n  try {\n    const response = await client.put(`${API}/category/${code}`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const updateSubCategory = async (code, subCode, category, accessToken) => {\n  const payload = category;\n  try {\n    const response = await client.put(`${API}/category/${code}/subcategory/${subCode}`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\n\n// export const deletecategory1 = (productId) => {\n//     console.log(productId)\n//     return fetch(`${API}/category/${productId}`, {\n//         method: 'DELETE',\n//         headers: {\n//             Accept: 'application/json',\n//             'Content-Type': 'application/json',\n//             //Authorization: `Bearer ${ token }`\n//         }\n//     })\n// };\n\nexport const deletecategory = async (code, subcode, accessToken) => {\n  try {\n    const response = await client.delete(`${API}/category/${code}/subcategory/${subcode}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deletecategorytest = async (code, accessToken) => {\n  try {\n    const response = await client.delete(`${API}/category/${code}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getCategory = async (code, accessToken) => {\n  try {\n    const response = await client.get(`${API}/category/${code}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getSubCategory = async (code, subCode, accessToken) => {\n  try {\n    const response = await client.get(`${API}/category/${code}/subcategory/${subCode}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// LInk tab.  .....................................................................//\nexport const getCategories = async accessToken => {\n  try {\n    const response = await client.get(`${API}/category/list?fetch=all`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const listOrders = () => {\n  return fetch(`${API}/order/list/`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json'\n      //  Authorization: `Bearer ${ token }`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const deleteOrder = (orderId, category) => {\n  return fetch(`${API}/order/delete/${orderId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getOrder = orderId => {\n  return fetch(`${API}/order/${orderId}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateOrderData = (orderId, order) => {\n  return fetch(`${API}/order/update/${orderId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n      // Authorization: `Bearer ${token}`\n    },\n\n    body: JSON.stringify(order)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n// Manufacturer Api//\nexport const createManufacturer = async (manufacture, accessToken) => {\n  const payload = manufacture;\n  try {\n    const response = await client.post(`${API}/manufacturer`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const getManufacturer = async (name, accessToken) => {\n  try {\n    const response = await client.get(`${API}/manufacturer/${name}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getManufacturers = async accessToken => {\n  try {\n    const response = await client.get(`${API}/manufacturer/list`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateManfacturer = async (name, manufacturs, accessToken) => {\n  const payload = manufacturs;\n  try {\n    const response = await client.put(`${API}/manufacturer/${name}`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const statusManfacturer = async (name, manufactures, accessToken) => {\n  const payload = manufactures;\n  try {\n    const response = await client.put(`${API}/manufacturer/${name}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const statusChangeManfacturer = async (name, manufacturers, accessToken) => {\n  const payload = manufacturers;\n  try {\n    const response = await client.put(`${API}/manufacturer/${name}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteManufacturer1 = async (name, accessToken) => {\n  // const payload = JSON.stringify(category);\n\n  try {\n    const response = await client.delete(`${API}/manufacturer/${name}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteManufacturer = manufacturerId => {\n  return fetch(`${API}/manufacturer/${manufacturerId}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n      //Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n//\nexport const getStatusValues = (userId, token) => {\n  return fetch(`${API}/order/status-values/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n  return fetch(`${API}/order/${orderId}/status/${userId}`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      status,\n      orderId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\nexport const getProducts = async (accessToken, storeId, type) => {\n  /*\n  /prodmgmt/admin/product/list\", ProductAPI.getAllProducts);\n  router.put(\"/prodmgmt/admin/product/:code/status\"\n  */\n  try {\n    if (type == \"ADMIN\") {\n      console.log(type, \"from api\");\n      const response = await client.get(`${API}/prodmgmt/admin/product/list?fetch=all`);\n      return response;\n    } else {\n      const response = await client.get(`${API}/prodmgmt/store/${storeId}/product/list?fetch=all`);\n      return response;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const statusDeleteProducts = async (code, accessToken) => {\n  try {\n    const response = await client.delete(`${API}/product/${code}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const statusProducts = async (productId, product) => {\n  const payload = product;\n  try {\n    const response = await client.put(`${API}/product/${productId}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const statusChangeProducts = async (productId, product) => {\n  const payload = product;\n  try {\n    const response = await client.put(`${API}/product/${productId}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const createProduct = async (product, storeId) => {\n  const payload = product;\n  const accessToken1 = JSON.parse(localStorage.getItem(\"jwt\"));\n  return await client.post(`${API}/prodmgmt/store/${storeId}/product`, payload);\n  /*try {\n      const response = await axios.post(`${API}/product`, payload, {\n           headers: {\n              Accept: 'application/json',\n              'Content-Type': 'application/json',\n              Authorization: `Bearer ${accessToken1}`\n          },\n       })\n      return response;\n  }\n  catch (err) {\n      console.log(err);\n      throw err;\n   };*/\n};\n\nexport const getProduct = async (code, accessToke) => {\n  const payload = code;\n  const accessToken = localStorage.getItem('jwt');\n  try {\n    const response = await client.get(`${API}/product/${code}`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n  ;\n};\n\n// old update product\nexport const updateProducttest = (productId, product) => {\n  return fetch(`${API}/product/${productId}/`, {\n    method: 'PUT',\n    headers: {\n      Accept: 'application/json'\n      //Authorization: `Bearer ${token}`\n    },\n\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateProduct = async product => {\n  const payload = product;\n  let code = product.code;\n  const accessToken1 = JSON.parse(localStorage.getItem(\"jwt\"));\n  return await client.put(`${API}/product/${code}`, payload);\n};\nexport const createmenu = async category => {\n  try {\n    const response = await fetch(`${API}/menu/create`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n        //  Authorization: `Bearer ${token}`\n      },\n\n      body: JSON.stringify(category)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// specification api //\n/*\nexport const createspecification = async (category) => {\n \n    try {\n        const response = await fetch(`${API}/specification/create`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n              //  Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(category)\n        });\n        return await response.json();\n    } catch (err) {\n        console.log(err);\n    }\n};\n*/\nexport const createspecification = async (category, accessToken) => {\n  const payload = category;\n  try {\n    const response = await client.post(`${API}/specification`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const updatespecification = async (code, category, accessToken) => {\n  const payload = category;\n  try {\n    const response = await client.put(`${API}/specification/${code}`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const getSpecification = async (code, accessToken) => {\n  const payload = code;\n  try {\n    const response = await client.get(`${API}/specification/${code}`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getAllSpecifications = async accessToken => {\n  try {\n    const response = await client.get(`${API}/specification/list?fetch=all`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getAllActiveSpecifications = async accessToken => {\n  try {\n    const accessToken1 = JSON.parse(localStorage.getItem(\"jwt\"));\n    const response = await client.get(`${API}/specification/list`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteSpecification = productId => {\n  return fetch(`${API}/specification/${productId}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n      //Authorization: `Bearer ${token}`\n    }\n  });\n};\n\nexport const deleteSpecificationSoft = async (name, accessToken) => {\n  // const payload = JSON.stringify(category)\n  try {\n    const response = await client.delete(`${API}/specification/${name}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const statusSpecification = async (code, specification, accessToken) => {\n  const payload = specification;\n  try {\n    const response = await client.put(`${API}/specification/${code}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const statusChangeSpecification = async (code, specification, accessToken) => {\n  const payload = specification;\n  try {\n    const response = await client.put(`${API}/specification/${code}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\n//      //\n\n// Link tab api..................category.............................................................//\nexport const getAllCategory = async accessToken => {\n  try {\n    const response = await client.get(`${API}/category/list?fetch=all`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getManufactureName = async accessToken => {\n  try {\n    const response = await axios.get(`${API}/manufacturer/list`, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getAllSubCategory = async (code, accessToken) => {\n  const accessToken1 = JSON.parse(localStorage.getItem(\"jwt\"));\n  try {\n    const response = await client.get(`${API}/category/${code}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n  ;\n};\n\n// show all user\nexport const getCoustomer = async accessToken => {\n  try {\n    const response = await axios.get(`${API}/cust/list`, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getCust = productId => {\n  return fetch(`${API}/cust/${productId}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateCustomer = (productId, category) => {\n  return fetch(`${API}/cust/${productId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n      // Authorization: `Bearer ${token}`\n    },\n\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const deleteCustomer = (productId, category) => {\n  return fetch(`${API}/cust/delete/${productId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const removeCustomer = productId => {\n  return fetch(`${API}/cust/${productId}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const statusCustomer = (productId, category) => {\n  return fetch(`${API}/cust/status/${productId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const statusCheckCustomer = (productId, category) => {\n  return fetch(`${API}/cust/statusCheck/${productId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n//create tax API //\nexport const createTax = async tax => {\n  try {\n    const response = await fetch(`${API}/tax/create`, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n        //  Authorization: `Bearer ${token}`\n      },\n\n      body: JSON.stringify(tax)\n    });\n    return await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getTaxes = () => {\n  return fetch(`${API}/tax`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const deleteTax = (taxId, category) => {\n  return fetch(`${API}/tax/delete/${taxId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getTax = attributeId => {\n  return fetch(`${API}/tax/${attributeId}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateTax = (taxId, tax) => {\n  return fetch(`${API}/tax/${taxId}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n      // Authorization: `Bearer ${token}`\n    },\n\n    body: JSON.stringify(tax)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const statusTax = (taxId, tax) => {\n  return fetch(`${API}/tax/status/${taxId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    },\n    body: JSON.stringify(tax)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const statusChangeTax = (taxId, tax) => {\n  return fetch(`${API}/tax/statusChange/${taxId}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n    },\n    body: JSON.stringify(tax)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n\n//create Attribute API //\n\nexport const createAttribute = async (attribute, accessToken) => {\n  const payload = attribute;\n  try {\n    const response = await client.post(`${API}/attribute`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const getAttributes = async accessToken => {\n  try {\n    const response = await client.get(`${API}/attribute/list?fetch=all`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n  ;\n};\nexport const getDimanstions = async (attributeId, accessToken) => {\n  const payload = attributeId;\n  try {\n    const response = await client.get(`${API}/attribute/${attributeId}`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getActiveAttributes = async accessToken => {\n  try {\n    const response = await client.get(`${API}/attribute/list`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getAttributeByCode = async code => {\n  const accessToken1 = JSON.parse(localStorage.getItem(\"jwt\"));\n  try {\n    const response = await client.get(`${API}/attribute/${code}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n  ;\n};\nexport const getAttribute = async (attributeId, accessToken) => {\n  const payload = attributeId;\n  try {\n    const response = await client.get(`${API}/attribute/${attributeId}`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n  ;\n};\nexport const updateAttribute = async (name, attribute, accessToken) => {\n  const payload = attribute;\n  try {\n    const response = await client.put(`${API}/attribute/${name}`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n  ;\n};\nexport const deleteAttributeone = async (name, accessToken) => {\n  try {\n    const response = await client.delete(`${API}/attribute/${name}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n  ;\n};\nexport const deleteAttribute = attributeId => {\n  return fetch(`${API}/attribute/${attributeId}`, {\n    method: 'DELETE',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n      //Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const statusAttributes = async (name, attributes, accessToken) => {\n  const payload = attributes;\n  try {\n    const response = await client.put(`${API}/attribute/${name}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n  ;\n};\nexport const statusChangeAttributes = async (name, attributes, accessToken) => {\n  const payload = attributes;\n  try {\n    const response = await client.put(`${API}/attribute/${name}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n  ;\n};\nexport const getStoreName = async accessToken => {\n  try {\n    const response = await axios.get(`${API}/store/list`, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    console.log(response, \"resp\");\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getProductName = async storeId => {\n  const accessToken = JSON.parse(localStorage.getItem(\"jwt\"));\n  console.log(accessToken, \"accessToken\");\n  // const storeId = (localStorage.getItem(\"storeid\"));\n  // console.log(storeId,\"storeid\");\n  try {\n    const response = await axios.get(`${API}/prodmgmt/store/${storeId}/product/list`, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    console.log(response, \"get data\");\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// update Special Products........................................//\n\nexport const updateSpecialProducts = manageData => {\n  console.log(\"manageData\", manageData);\n  return fetch(`${API}/prodmgmt/admin/featured/product`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json'\n      // Authorization: `Bearer ${token}`\n    },\n\n    body: JSON.stringify({\n      products: manageData\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getSpecialandFeaturedProducts = async accessToken => {\n  try {\n    const response = await axios.get(`${API}/prodmgmt/admin/featured/product/`, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    console.log(response, \"resp\");\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// get order data by store id ....................................//\n\nexport const getOrderData = async () => {\n  const accessToken = JSON.parse(localStorage.getItem(\"jwt\"));\n  console.log(accessToken, \"accessToken\");\n  const storeId = localStorage.getItem(\"storeId\");\n  const storeid = storeId.slice(1, -1);\n  console.log(storeId, \"storeid\");\n  try {\n    const response = await axios.get(`${API}/store/${storeid}/orders`, {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`\n      }\n    });\n    console.log(response, \"get data\");\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"names":["API","axios","client","createCategory","category","payload","url","response","post","err","data","console","log","statusCategories","code","accessToken","put","StatusCategories","getCategoryBycode","JSON","stringify","get","CreateSubCategory","statusCategory","subcode","statusChangeCategory","updateCategory","updateSubCategory","subCode","deletecategory","delete","deletecategorytest","getCategory","getSubCategory","getCategories","listOrders","fetch","method","headers","Accept","then","json","catch","deleteOrder","orderId","body","getOrder","updateOrderData","order","createManufacturer","manufacture","getManufacturer","name","getManufacturers","updateManfacturer","manufacturs","statusManfacturer","manufactures","statusChangeManfacturer","manufacturers","deleteManufacturer1","deleteManufacturer","manufacturerId","getStatusValues","userId","token","Authorization","updateOrderStatus","status","getProducts","storeId","type","statusDeleteProducts","statusProducts","productId","product","statusChangeProducts","createProduct","accessToken1","parse","localStorage","getItem","getProduct","accessToke","updateProducttest","updateProduct","createmenu","createspecification","updatespecification","getSpecification","getAllSpecifications","getAllActiveSpecifications","deleteSpecification","deleteSpecificationSoft","statusSpecification","specification","statusChangeSpecification","getAllCategory","getManufactureName","getAllSubCategory","getCoustomer","getCust","updateCustomer","deleteCustomer","removeCustomer","statusCustomer","statusCheckCustomer","createTax","tax","getTaxes","deleteTax","taxId","getTax","attributeId","updateTax","statusTax","statusChangeTax","createAttribute","attribute","getAttributes","getDimanstions","getActiveAttributes","getAttributeByCode","getAttribute","updateAttribute","deleteAttributeone","deleteAttribute","statusAttributes","attributes","statusChangeAttributes","getStoreName","getProductName","updateSpecialProducts","manageData","products","getSpecialandFeaturedProducts","getOrderData","storeid","slice"],"sources":["C:/localpartner-Repo/LocalPartner-AdminPanel/src/admin/apiAdmin.js"],"sourcesContent":["import { API } from '../config';\nimport axios from 'axios';\nimport client from '../Client';\n\n  \nexport const createCategory = async (category) => {\n    const payload = category\n    try {\n        const url = `${API}/category`\n        const response = await client.post(url, payload\n        );\n\n        return response;\n    } catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err);\n    }\n};\nexport const statusCategories = async (category, code, accessToken) => {\n    const payload = category\n    try {\n        const response = await client.put(`${API}/category/${code}/status`, payload);\n        return response;\n    } catch (err) {\n        console.log(err)\n    }\n    // .then(response => {\n    //     return response.json();\n    // })\n\n}\n\nexport const StatusCategories = async (category, code, accessToken) => {\n\n    const payload = category;\n    try {\n        const response = await client.put(`${API}/category/${code}/status`, payload);\n        return response\n    }\n    catch (err) {\n        console.log(err)\n    }\n}\nexport const getCategoryBycode = async (code, category, accessToken) => {\n\n    const payload = JSON.stringify(category);\n    try {\n        const response = await client.get(`${API}/category/${code}`, payload)\n        return response\n    }\n    catch (err) {\n        console.log(err)\n    }\n\n}\n\nexport const CreateSubCategory = async (code, category, accessToken) => {\n    const payload = category;\n    try {\n        const response = await client.post(`${API}/category/${code}/subcategory`, payload);\n        return response\n    }\n    catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err)\n    }\n}\n\n\n\n\n\n\n\n\nexport const statusCategory = async (category, code, subcode, accessToken) => {\n    const payload = category;\n\n    try {\n        const response = await client.put(`${API}/category/${code}/subcategory/${subcode}/status`, payload);\n        return response\n    }\n    catch (err) {\n        console.log(err);\n\n    }\n};\n\nexport const statusChangeCategory = async (category, code, subcode, accessToken) => {\n    const payload = category;\n\n    try {\n        const response = await client.put(`${API}/category/${code}/subcategory/${subcode}/status`, payload);\n        return response;\n    } catch (err) {\n        console.log(err)\n    }\n};\n\nexport const updateCategory = async (category, code, accessToken) => {\n    const payload = category;\n\n    try {\n        const response = await client.put(`${API}/category/${code}`, payload);\n        return response;\n    } catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err)\n    }\n};\n\nexport const updateSubCategory = async (code, subCode, category, accessToken) => {\n    const payload = category;\n    try {\n        const response = await client.put(`${API}/category/${code}/subcategory/${subCode}`, payload)\n        return response;\n    } catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err)\n    }\n};\n\n\n\n\n// export const deletecategory1 = (productId) => {\n//     console.log(productId)\n//     return fetch(`${API}/category/${productId}`, {\n//         method: 'DELETE',\n//         headers: {\n//             Accept: 'application/json',\n//             'Content-Type': 'application/json',\n//             //Authorization: `Bearer ${ token }`\n//         }\n//     })\n// };\n\nexport const deletecategory = async (code, subcode, accessToken) => {\n    try {\n        const response = await client.delete(`${API}/category/${code}/subcategory/${subcode}`)\n        return response;\n    } catch (err) {\n        console.log(err)\n    }\n};\nexport const deletecategorytest = async (code, accessToken) => {\n    try {\n        const response = await client.delete(`${API}/category/${code}`)\n        return response;\n    } catch (err) {\n        console.log(err)\n    }\n};\n\n\n\nexport const getCategory = async (code, accessToken) => {\n    try {\n        const response = await client.get(`${API}/category/${code}`);\n        return response;\n    }\n    catch (err) {\n        console.log(err)\n    }\n}\n\nexport const getSubCategory = async (code, subCode, accessToken) => {\n    try {\n        const response = await client.get(`${API}/category/${code}/subcategory/${subCode}`);\n        return response;\n    }\n    catch (err) {\n        console.log(err)\n    }\n};\n\n// LInk tab.  .....................................................................//\nexport const getCategories = async (accessToken) => {\n    try {\n        const response = await client.get(`${API}/category/list?fetch=all`);\n        return response;\n    }\n    catch (err) {\n        console.log(err)\n    }\n};\n\n\n\n\n\n\nexport const listOrders = () => {\n    return fetch(`${API}/order/list/`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            //  Authorization: `Bearer ${ token }`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const deleteOrder = (orderId, category) => {\n    return fetch(`${API}/order/delete/${orderId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getOrder = orderId => {\n    return fetch(`${API}/order/${orderId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateOrderData = (orderId, order) => {\n    return fetch(`${API}/order/update/${orderId}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            // Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(order)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n// Manufacturer Api//\nexport const createManufacturer = async (manufacture, accessToken) => {\n    const payload = manufacture;\n\n    try {\n        const response = await client.post(`${API}/manufacturer`, payload);\n        return response;\n    } catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err);\n    }\n};\nexport const getManufacturer = async (name, accessToken) => {\n    try {\n        const response = await client.get(`${API}/manufacturer/${name}`)\n        return response;\n    } catch (err) {\n        console.log(err);\n    }\n};\nexport const getManufacturers = async (accessToken) => {\n    try {\n        const response = await client.get(`${API}/manufacturer/list`)\n        return response;\n    }\n    catch (err) {\n        console.log(err);\n    }\n\n};\n\nexport const updateManfacturer = async (name, manufacturs, accessToken) => {\n    const payload = manufacturs;\n    try {\n        const response = await client.put(`${API}/manufacturer/${name}`, payload\n\n        );\n        return response;\n    }\n    catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err);\n    }\n};\n\nexport const statusManfacturer = async (name, manufactures, accessToken) => {\n    const payload = manufactures;\n    try {\n        const response = await client.put(`${API}/manufacturer/${name}/status`, payload);\n        return response;\n    }\n    catch (err) {\n        console.log(err);\n    }\n\n};\n\nexport const statusChangeManfacturer = async (name, manufacturers, accessToken) => {\n    const payload = manufacturers;\n\n    try {\n        const response = await client.put(`${API}/manufacturer/${name}/status`, payload)\n        return response;\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const deleteManufacturer1 = async (name, accessToken) => {\n    // const payload = JSON.stringify(category);\n\n    try {\n        const response = await client.delete(`${API}/manufacturer/${name}`)\n        return response;\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const deleteManufacturer = (manufacturerId) => {\n    return fetch(`${API}/manufacturer/${manufacturerId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            //Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\n\n\n\n//\nexport const getStatusValues = (userId, token) => {\n    return fetch(`${API}/order/status-values/${userId}`, {\n        method: 'GET',\n        headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n    return fetch(`${API}/order/${orderId}/status/${userId}`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ status, orderId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n/**\n * to perform crud on product\n * get all products\n * get a single product\n * update single product\n * delete single product\n */\n\n\n\n\nexport const getProducts = async (accessToken,storeId,type) => {\n    /*\n    /prodmgmt/admin/product/list\", ProductAPI.getAllProducts);\nrouter.put(\"/prodmgmt/admin/product/:code/status\"\n*/\n    try {\n        if(type==\"ADMIN\"){\n            console.log(type,\"from api\")\n        const response = await client.get(`${API}/prodmgmt/admin/product/list?fetch=all`)\n        return response;}\n        else{\n           \n            const response = await client.get(`${API}/prodmgmt/store/${storeId}/product/list?fetch=all`)\n            return response;\n        }\n\n        \n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\n\nexport const statusDeleteProducts = async (code, accessToken) => {\n\n    try {\n        const response = await client.delete(`${API}/product/${code}`)\n        return response\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\nexport const statusProducts = async(productId, product) => {\n    const payload = product\n    try {\n        const response = await client.put(`${API}/product/${productId}/status`,payload)\n        return response;\n    }\n    catch (err) {\n        console.log(err);\n    }\n}\n\nexport const statusChangeProducts =async (productId, product) => {\n    const payload = product\n    try {\n        const response = await client.put(`${API}/product/${productId}/status`,payload)\n        return response;\n    }\n    catch (err) {\n        console.log(err);\n    }\n}\n\n\n\nexport const createProduct = async (product,storeId) => {\n    const payload = product\n    const accessToken1 = JSON.parse(localStorage.getItem(\"jwt\"));\n    \n    return await client.post(`${API}/prodmgmt/store/${storeId}/product`, payload)\n    /*try {\n        const response = await axios.post(`${API}/product`, payload, {\n\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${accessToken1}`\n            },\n\n        })\n        return response;\n    }\n    catch (err) {\n        console.log(err);\n        throw err;\n\n    };*/\n}\n\nexport const getProduct = async (code, accessToke) => {\n    const payload = code\n    const accessToken = localStorage.getItem('jwt')\n\n    try {\n        const response = await client.get(`${API}/product/${code}`, payload,)\n        return response;\n    }\n    catch (err) {\n        console.log(err);\n\n    };\n}\n\n// old update product\nexport const updateProducttest = (productId, product) => {\n    return fetch(`${API}/product/${productId}/`, {\n        method: 'PUT',\n        headers: {\n            Accept: 'application/json',\n            //Authorization: `Bearer ${token}`\n        },\n        body: product\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\nexport const updateProduct = async (product) => {\n   \n    const payload = product\n    let code = product.code\n    const accessToken1 = JSON.parse(localStorage.getItem(\"jwt\"));\n\n    return await client.put(`${API}/product/${code}`, payload, );\n};\n\n\n\n\nexport const createmenu = async (category) => {\n    try {\n        const response = await fetch(`${API}/menu/create`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                //  Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(category)\n        });\n        return await response.json();\n    } catch (err) {\n        console.log(err);\n    }\n};\n\n\n\n\n// specification api //\n/*\nexport const createspecification = async (category) => {\n \n    try {\n        const response = await fetch(`${API}/specification/create`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n              //  Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(category)\n        });\n        return await response.json();\n    } catch (err) {\n        console.log(err);\n    }\n};\n*/\nexport const createspecification = async (category, accessToken) => {\n    const payload = category\n    try {\n        const response = await client.post(`${API}/specification`, payload);\n        return response\n    } catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err);\n    }\n};\nexport const updatespecification = async (code, category, accessToken) => {\n    const payload = category\n    try {\n        const response = await client.put(`${API}/specification/${code}`, payload)\n        return response;\n    } catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err);\n    }\n};\nexport const getSpecification = async (code, accessToken) => {\n    const payload = code\n    try {\n        const response = await client.get(`${API}/specification/${code}`, payload)\n        return response;\n    } catch (err) {\n        console.log(err);\n    }\n};\nexport const getAllSpecifications = async (accessToken) => {\n    try {\n        const response = await client.get(`${API}/specification/list?fetch=all`)\n        return response\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nexport const getAllActiveSpecifications = async (accessToken) => {\n    try {\n        const accessToken1 = JSON.parse(localStorage.getItem(\"jwt\"));\n        const response = await client.get(`${API}/specification/list`)\n        return response\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nexport const deleteSpecification = (productId) => {\n    return fetch(`${API}/specification/${productId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            //Authorization: `Bearer ${token}`\n        }\n    })\n};\n\nexport const deleteSpecificationSoft = async (name, accessToken) => {\n    // const payload = JSON.stringify(category)\n    try {\n        const response = await client.delete(`${API}/specification/${name}`\n\n        )\n        return response\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\n\n\nexport const statusSpecification = async (code, specification, accessToken) => {\n    const payload = specification\n    try {\n        const response = await client.put(`${API}/specification/${code}/status`,payload)\n        return response;\n    }\n    catch (err) {\n        console.log(err);\n    }\n\n\n};\n\nexport const statusChangeSpecification = async (code, specification, accessToken) => {\n    const payload = specification\n    try {\n        const response = await client.put(`${API}/specification/${code}/status`, payload)\n        return response;\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n//      //\n\n// Link tab api..................category.............................................................//\nexport const getAllCategory = async (accessToken) => {\n    try {\n        const response = await client.get(`${API}/category/list?fetch=all`)\n        return response\n    }\n    catch (err) {\n        console.log(err);\n    }\n};\n\nexport const getManufactureName = async (accessToken) => {\n    try {\n        const response = await axios.get(`${API}/manufacturer/list`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${accessToken}`\n            },\n        })\n        return response;\n    }\n    catch (err) { console.log(err) }\n}\n\nexport const getAllSubCategory = async (code, accessToken) => {\n    const accessToken1 = JSON.parse(localStorage.getItem(\"jwt\"));\n    try {\n        const response = await client.get(`${API}/category/${code}`\n        )\n        return response;\n    }\n    catch (err) { console.log(err) };\n};\n\n\n\n// show all user\nexport const getCoustomer = async (accessToken) => {\n    try {\n        const response = await axios.get(`${API}/cust/list`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${accessToken}`\n            },\n        })\n        return response;\n    }\n    catch (err) { console.log(err) }\n}\n\n\nexport const getCust = productId => {\n    return fetch(`${API}/cust/${productId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateCustomer = (productId, category) => {\n    return fetch(`${API}/cust/${productId}`, {\n        method: 'PUT',\n        headers: { \n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            // Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\nexport const deleteCustomer = (productId, category) => {\n    return fetch(`${API}/cust/delete/${productId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\nexport const removeCustomer = (productId) => {\n    return fetch(`${API}/cust/${productId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\nexport const statusCustomer = (productId, category) => {\n    return fetch(`${API}/cust/status/${productId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\nexport const statusCheckCustomer = (productId, category) => {\n    return fetch(`${API}/cust/statusCheck/${productId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//create tax API //\nexport const createTax = async (tax) => {\n    try {\n        const response = await fetch(`${API}/tax/create`, {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                //  Authorization: `Bearer ${token}`\n            },\n            body: JSON.stringify(tax)\n        });\n        return await response.json();\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const getTaxes = () => {\n    return fetch(`${API}/tax`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const deleteTax = (taxId, category) => {\n    return fetch(`${API}/tax/delete/${taxId}`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(category)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getTax = attributeId => {\n    return fetch(`${API}/tax/${attributeId}`, {\n        method: 'GET'\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const updateTax = (taxId, tax) => {\n    return fetch(`${API}/tax/${taxId}`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            // Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(tax)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const statusTax = (taxId, tax) => {\n    return fetch(`${API}/tax/status/${taxId}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(tax)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const statusChangeTax = (taxId, tax) => {\n    return fetch(`${API}/tax/statusChange/${taxId}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n        },\n        body: JSON.stringify(tax)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n//create Attribute API //\n\n\nexport const createAttribute = async (attribute, accessToken) => {\n    const payload = attribute\n    try {\n        const response = await client.post(`${API}/attribute`, payload);\n        return response;\n    } catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err);\n    }\n};\n\n\nexport const getAttributes = async (accessToken) => {\n    try {\n        const response = await client.get(`${API}/attribute/list?fetch=all`)\n        return response;\n    }\n    catch (err) { console.log(err) };\n};\n\nexport const getDimanstions = async (attributeId, accessToken) => {\n    const payload = attributeId;\n    try {\n        const response = await client.get(`${API}/attribute/${attributeId}`, payload)\n        return response\n    }\n    catch (err) {\n        console.log(err)\n\n    }\n}\nexport const getActiveAttributes = async (accessToken) => {\n    try {\n        const response = await client.get(`${API}/attribute/list`);\n        return response\n    }\n    catch (err) {\n        console.log(err)\n    }\n};\n\nexport const getAttributeByCode = async (code) => {\n\n    const accessToken1 = JSON.parse(localStorage.getItem(\"jwt\"));\n    try {\n        const response = await client.get(`${API}/attribute/${code}`\n        )\n        return response;\n    }\n    catch (err) { console.log(err) };\n};\nexport const getAttribute = async (attributeId, accessToken) => {\n    const payload = attributeId\n    try {\n        const response = await client.get(`${API}/attribute/${attributeId}`, payload)\n        return response;\n    }\n    catch (err) { console.log(err) };\n};\n\n\nexport const updateAttribute = async (name, attribute, accessToken) => {\n    const payload = attribute;\n    try {\n        const response = await client.put(`${API}/attribute/${name}`, payload);\n        return response;\n    }\n    catch (err) { \n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err) };\n};\n\nexport const deleteAttributeone = async (name, accessToken) => {\n\n    try {\n        const response = await client.delete(`${API}/attribute/${name}`\n\n        )\n        return response;\n    }\n    catch (err) { console.log(err) };\n};\nexport const deleteAttribute = (attributeId) => {\n    return fetch(`${API}/attribute/${attributeId}`, {\n        method: 'DELETE',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            //Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\nexport const statusAttributes = async (name, attributes, accessToken) => {\n    const payload = attributes\n\n    try {\n        const response = await client.put(`${API}/attribute/${name}/status`, payload)\n\n        return response;\n    }\n    catch (err) { console.log(err) };\n};\n\nexport const statusChangeAttributes = async (name, attributes, accessToken) => {\n    const payload = attributes\n    try {\n\n        const response = await client.put(`${API}/attribute/${name}/status`, payload)\n        return response;\n    }\n    catch (err) { console.log(err) };\n};\n\nexport const getStoreName = async (accessToken) => {\n    try {\n        const response = await axios.get(`${API}/store/list`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${accessToken}`\n            },\n        })\n        console.log(response, \"resp\")\n        return response;\n    }\n    catch (err) { console.log(err) }\n}\n\nexport const getProductName = async (storeId) => {\n    const accessToken = JSON.parse(localStorage.getItem(\"jwt\"));\n    console.log(accessToken,\"accessToken\");\n    // const storeId = (localStorage.getItem(\"storeid\"));\n    // console.log(storeId,\"storeid\");\n    try {\n        const response = await axios.get(`${API}/prodmgmt/store/${storeId}/product/list`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${accessToken}`\n            },\n        })\n        console.log(response,\"get data\")\n        return response;\n     \n    }\n    catch (err) { console.log(err) }\n}\n\n// update Special Products........................................//\n\n\n\nexport const updateSpecialProducts = (manageData) => {\n      console.log(\"manageData\",manageData)\n    return fetch(`${API}/prodmgmt/admin/featured/product`, {\n        method: 'PUT',\n        headers: {\n            'Content-Type': 'application/json',\n            Accept: 'application/json',\n            // Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({products :manageData})\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n}; \nexport const getSpecialandFeaturedProducts = async (accessToken) => {\n    try {\n        const response = await axios.get(`${API}/prodmgmt/admin/featured/product/`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${accessToken}`\n            },\n        })\n        console.log(response, \"resp\")\n        return response;\n    }\n    catch (err) { console.log(err) }\n}\n\n\n// get order data by store id ....................................//\n\nexport const getOrderData = async () => {\n    const accessToken = JSON.parse(localStorage.getItem(\"jwt\"));\n    console.log(accessToken,\"accessToken\");\n    const storeId = localStorage.getItem(\"storeId\");\n    const storeid = storeId.slice(1, -1)\n    console.log(storeId,\"storeid\");\n    try {\n        const response = await axios.get(`${API}/store/${storeid}/orders`, {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${accessToken}`\n            },\n        })\n        console.log(response,\"get data\")\n        return response;\n     \n    }\n    catch (err) { console.log(err) }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}