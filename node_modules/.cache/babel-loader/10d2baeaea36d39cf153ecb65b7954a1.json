{"ast":null,"code":"import axios from 'axios';\nimport { API } from '../config';\nimport client from '../Client';\nvar accessToken = JSON.parse(localStorage.getItem(\"jwt\"));\n\n/*get user */\nexport const getUser = async (storeId, accessToken) => {\n  try {\n    const response = await client.get(`${API}/usermgmt/store/${storeId}/user/list`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\n// delete user\nexport const deleteUser = async (userId, storeId, accessToken) => {\n  try {\n    const response = await client.delete(`${API}/usermgmt/store/${storeId}/user/${userId}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getUsers = async (userId, storeId, accessToken) => {\n  try {\n    const response = await client.get(`${API}/usermgmt/store/${storeId}/user/${userId}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const createUser = async (users, storeId) => {\n  const payload = users;\n  try {\n    const response = await client.post(`${API}/usermgmt/store/${storeId}/user`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const updateUser = async (userId, users, storeId) => {\n  const payload = users;\n  try {\n    const response = await client.put(`${API}/usermgmt/store/${storeId}/user/${userId}`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const statusUser = async (users, storeId, userId, accessToken) => {\n  const payload = users;\n  try {\n    const response = await client.post(`${API}/usermgmt/store/${storeId}/user/${userId}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const statusChangeUser = async (users, storeId, userId, accessToken) => {\n  const payload = users;\n  try {\n    const response = await client.post(`${API}/usermgmt/store/${storeId}/user/${userId}/status`, payload);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getRoleList = async (storeId, accessToken) => {\n  try {\n    const response = await client.get(`${API}/usermgmt/store/${storeId}/role/list`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"names":["axios","API","client","accessToken","JSON","parse","localStorage","getItem","getUser","storeId","response","get","err","console","log","deleteUser","userId","delete","getUsers","createUser","users","payload","post","data","updateUser","put","statusUser","statusChangeUser","getRoleList"],"sources":["C:/localpartner-Repo/LocalPartner-AdminPanel/src/userManagement/apiUser.js"],"sourcesContent":["import axios from 'axios';\nimport { API } from '../config';\nimport client from '../Client';\n\nvar accessToken = JSON.parse(localStorage.getItem(\"jwt\"));\n\n\n\n/*get user */\nexport const getUser = async (storeId, accessToken) => {\n    try {\n        const response = await client.get(`${API}/usermgmt/store/${storeId}/user/list`);\n        return response;\n    }\n    catch (err) {\n        console.log(err)\n    }\n\n\n};\n// delete user\nexport const deleteUser = async (userId, storeId, accessToken) => {\n    try {\n        const response = await client.delete(`${API}/usermgmt/store/${storeId}/user/${userId}`);\n        return response;\n    }\n    catch (err) {\n        console.log(err)\n    }\n};\n\nexport const getUsers = async (userId, storeId, accessToken) => {\n    try {\n        const response = await client.get(`${API}/usermgmt/store/${storeId}/user/${userId}`)\n        return response;\n    }\n    catch (err) {\n        console.log(err)\n    }\n};\n\nexport const createUser = async (users, storeId) => {\n    const payload = users\n\n    try {\n        const response = await client.post(`${API}/usermgmt/store/${storeId}/user`, payload);\n        return response;\n    } catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err);\n    }\n};\nexport const updateUser = async(userId, users, storeId) => {\n    const payload=users;\n\n    try{\n        const response=await client.put(`${API}/usermgmt/store/${storeId}/user/${userId}`,payload)\n        return response;\n\n    }\n    catch(err){\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err)\n    }\n}\n\nexport const statusUser = async (users, storeId, userId, accessToken) => {\n    const payload = users;\n    try {\n        const response = await client.post(`${API}/usermgmt/store/${storeId}/user/${userId}/status`, payload)\n        return response\n    }\n\n    catch (err) {\n        console.log(err)\n    }\n};\nexport const statusChangeUser = async (users, storeId, userId, accessToken) => {\n    const payload = users\n    try {\n        const response = await client.post(`${API}/usermgmt/store/${storeId}/user/${userId}/status`, payload);\n        return response;\n    }\n\n    catch (err) {\n        console.log(err)\n    }\n};\nexport const getRoleList = async (storeId, accessToken) => {\n    try {\n        const response = await client.get(`${API}/usermgmt/store/${storeId}/role/list`);\n        return response;\n    }\n    catch (err) {\n        console.log(err)\n    }\n\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}