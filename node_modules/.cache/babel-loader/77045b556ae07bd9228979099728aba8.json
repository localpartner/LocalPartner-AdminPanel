{"ast":null,"code":"import axios from 'axios';\nimport client from '../Client';\nimport { API } from '../config';\n// import { isAuthenticated } from \"../common/utils\";\n// const { token } = isAuthenticated();\nvar accessToken = JSON.parse(localStorage.getItem(\"jwt\"));\nexport const addStoreData = async (data, accessToken) => {\n  const payload = data;\n  try {\n    const response = await client.post(`${API}/store`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    return err;\n  }\n};\nexport const storeList = async accessToken => {\n  try {\n    const response = await client.get(`${API}/store/list`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteStore = async (storeId, accessToken) => {\n  try {\n    const response = await client.delete(`${API}/store/${storeId}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const addUserRoleData = async (data, storeId, accessToken) => {\n  const payload = data;\n  try {\n    const response = await client.post(`${API}/usermgmt/store/${storeId}/role`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const getUserRoleListData = async (storeId, accessToken) => {\n  try {\n    const response = await client.get(`${API}/usermgmt/store/${storeId}/role/list`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getUserRoleByIdData = async (storeId, roleId, accessToken) => {\n  try {\n    const response = await client.get(`${API}/usermgmt/store/${storeId}/role/${roleId}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deleteUserRole = async (storeId, userRoleId) => {\n  try {\n    const response = client.delete(`${API}/usermgmt/store/${userRoleId}/role/${storeId}`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const accessModuleList = async accessToken => {\n  try {\n    const response = await client.get(`${API}/accessModuleList`);\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const storeUserList = async (storeId, accessToken) => {\n  try {\n    const repsonse = await client.get(`${API}/storeUserList/${storeId}`);\n    return repsonse;\n  } catch (err) {\n    console.log(err);\n  }\n};\n// changes on status\nexport const statusChangeStore = async (category, storeId) => {\n  const payload = category;\n  try {\n    const response = await client.post(`${API}/store/${storeId}/status`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const statusStore = async (category, storeId) => {\n  const payload = category;\n  try {\n    const response = await client.post(`${API}/store/${storeId}/status`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const RoleUpdate = async (data, storeId, roleId, accessToken) => {\n  const payload = data;\n  try {\n    const response = await client.put(`${API}/usermgmt/store/${storeId}/role/${roleId}`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};\nexport const StoreUpdate = async (data, storeId, accessToken) => {\n  const payload = data;\n  try {\n    const response = await client.put(`${API}/store/${storeId}`, payload);\n    return response;\n  } catch (err) {\n    if (err.response) {\n      // Request made but the server responded with an error\n      return err.response.data;\n    }\n    console.log(err);\n  }\n};","map":{"version":3,"names":["axios","client","API","accessToken","JSON","parse","localStorage","getItem","addStoreData","data","payload","response","post","err","storeList","get","console","log","deleteStore","storeId","delete","addUserRoleData","getUserRoleListData","getUserRoleByIdData","roleId","deleteUserRole","userRoleId","accessModuleList","storeUserList","repsonse","statusChangeStore","category","statusStore","RoleUpdate","put","StoreUpdate"],"sources":["C:/localpartner-Repo/LocalPartner-AdminPanel/src/store/ApiStore.js"],"sourcesContent":["import axios from 'axios';\nimport client from '../Client';\n\nimport { API } from '../config';\n// import { isAuthenticated } from \"../common/utils\";\n// const { token } = isAuthenticated();\nvar accessToken = JSON.parse(localStorage.getItem(\"jwt\"));\nexport const addStoreData = async (data, accessToken) => {\n    const payload = data;\n    try {\n        const response = await client.post(`${API}/store`, payload);\n        return response\n    }\n    catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        return err\n        \n    }\n}\n\nexport const storeList = async (accessToken) => {\n    try {\n        const response = await client.get(`${API}/store/list`)\n        return response\n    }\n    catch (err) {\n        console.log(err)\n    }\n}\n\n\n\nexport const deleteStore = async (storeId, accessToken) => {\n    try {\n        const response = await client.delete(`${API}/store/${storeId}`)\n        return response\n    } catch (err) {\n        console.log(err)\n    }\n}\n\n\nexport const addUserRoleData = async (data, storeId, accessToken) => {\n    const payload = data\n    try {\n        const response = await client.post(`${API}/usermgmt/store/${storeId}/role`, payload);\n        return response;\n    }\n    catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err)\n    }\n}\n\nexport const getUserRoleListData = async (storeId, accessToken) => {\n    try {\n        const response = await client.get(`${API}/usermgmt/store/${storeId}/role/list`)\n        return response\n    }\n    catch (err) {\n        console.log(err)\n    }\n}\n\nexport const getUserRoleByIdData = async (storeId, roleId, accessToken) => {\n    try {\n        const response = await client.get(`${API}/usermgmt/store/${storeId}/role/${roleId}`);\n        return response;\n    }\n    catch (err) {\n        console.log(err)\n    }\n}\n\nexport const deleteUserRole = async (storeId, userRoleId) => {\n    try {\n        const response = client.delete(`${API}/usermgmt/store/${userRoleId}/role/${storeId}`);\n        return response;\n    }\n    catch (err) {\n        console.log(err)\n    }\n}\n\nexport const accessModuleList = async (accessToken) => {\n    try {\n        const response = await client.get(`${API}/accessModuleList`);\n        return response\n    }\n    catch (err) {\n        console.log(err)\n    }\n}\n\nexport const storeUserList = async (storeId, accessToken) => {\n    try {\n        const repsonse = await client.get(`${API}/storeUserList/${storeId}`);\n        return repsonse;\n    }\n    catch (err) {\n        console.log(err)\n    }\n}\n// changes on status\nexport const statusChangeStore = async(category, storeId) => {\n\n    const payload = category\n    try {\n        const response = await client.post(`${API}/store/${storeId}/status`, payload);\n        return response;\n    } catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err)\n    }\n};\nexport const statusStore =async (category, storeId) => {\n\n    const payload = category\n    try {\n        const response = await client.post(`${API}/store/${storeId}/status`, payload);\n        return response;\n    } catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err)\n    }\n};\n\n\nexport const RoleUpdate = async (data, storeId, roleId, accessToken) => {\n    const payload = data\n    try {\n\n        const response = await client.put(`${API}/usermgmt/store/${storeId}/role/${roleId}`, payload);\n        return response\n    }\n\n\n    catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err)\n    }\n}\nexport const StoreUpdate = async (data, storeId, accessToken) => {\n    const payload = data\n    try {\n        const response = await client.put(`${API}/store/${storeId}`, payload)\n        return response\n    }\n    catch (err) {\n        if (err.response) {\n            // Request made but the server responded with an error\n            return(err.response.data);\n           \n        }\n        console.log(err)\n    }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}