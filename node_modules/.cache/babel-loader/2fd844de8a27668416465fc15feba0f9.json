{"ast":null,"code":"import { API, API_BASE_URL } from '../config';\nexport const adminsignin = admin => {\n  return fetch(`${API}/usersignin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n    },\n    body: JSON.stringify(admin)\n  });\n  // .then(response => {\n  //     return response.json();\n  // })\n  // .catch(err => {\n  //     console.log(err);\n  // });\n};\n\nexport const getToken = data => {\n  const basicAuth = Buffer.from(\"FE_WEB\" + \":\" + \"secret\").toString('base64');\n  const requestObj = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + basicAuth,\n      'X-Portal': 'user'\n    },\n    body: new URLSearchParams({\n      'username': data.email,\n      'password': data.password,\n      'grant_type': 'password'\n    })\n  };\n  return fetch(`${API_BASE_URL}/oauth/token`, requestObj).then(responce => {\n    return responce.json();\n  }).catch(error => console.log(\"Error :\", error));\n};\nexport const addUserRole = admin => {\n  return fetch(`${API}/addUserRole`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(admin)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"names":["API","API_BASE_URL","adminsignin","admin","fetch","method","headers","Accept","body","JSON","stringify","getToken","data","basicAuth","Buffer","from","toString","requestObj","URLSearchParams","email","password","then","responce","json","catch","error","console","log","addUserRole","response","err"],"sources":["C:/localpartner-Repo/LocalPartner-AdminPanel/src/auth/User.js"],"sourcesContent":["import { API,API_BASE_URL } from '../config';\n\nexport const adminsignin = admin => {\n    return fetch(`${API}/usersignin`, {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept\"\n        },\n        body: JSON.stringify(admin)\n    })\n        // .then(response => {\n        //     return response.json();\n        // })\n        // .catch(err => {\n        //     console.log(err);\n        // });\n        \n}\n\nexport const getToken = (data)=>{\n    const basicAuth = Buffer.from(\"FE_WEB\" + \":\" + \"secret\").toString('base64');\n    \n    const requestObj =  {\n        method: 'POST',\n        headers:{\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': 'Basic ' + basicAuth,\n          'X-Portal' :'user'\n        },    \n        body: new URLSearchParams({\n            'username': data.email,\n            'password': data.password,\n            'grant_type': 'password'\n            \n        })\n    };\n\n    return fetch(`${API_BASE_URL}/oauth/token`,requestObj).then(responce => {\n        return responce.json();\n    }).catch(error => \n        console.log(\"Error :\" ,error));\n\n    \n}\n\nexport const addUserRole = admin => {\n    return fetch(`${API}/addUserRole`, {\n        method : 'POST',\n        headers : {\n            Accept : 'application/json',\n            'Content-Type' :'application/json'\n        },\n        body: JSON.stringify(admin)\n    }).then(response => {\n            return response.json();\n        }).catch(err => {\n                console.log(err);\n            });\n}\n\n\n"],"mappings":"AAAA,SAASA,GAAG,EAACC,YAAY,QAAQ,WAAW;AAE5C,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;EAChC,OAAOC,KAAK,CAAE,GAAEJ,GAAI,aAAY,EAAE;IAC9BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACLC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE,kBAAkB;MAClC,6BAA6B,EAAE,GAAG;MAClC,8BAA8B,EAAE;IACpC,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK;EAC9B,CAAC,CAAC;EACE;EACA;EACA;EACA;EACA;EACA;AAER,CAAC;;AAED,OAAO,MAAMQ,QAAQ,GAAIC,IAAI,IAAG;EAC5B,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,QAAQ,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC;EAE3E,MAAMC,UAAU,GAAI;IAChBZ,MAAM,EAAE,MAAM;IACdC,OAAO,EAAC;MACN,cAAc,EAAE,mCAAmC;MACnD,eAAe,EAAE,QAAQ,GAAGO,SAAS;MACrC,UAAU,EAAE;IACd,CAAC;IACDL,IAAI,EAAE,IAAIU,eAAe,CAAC;MACtB,UAAU,EAAEN,IAAI,CAACO,KAAK;MACtB,UAAU,EAAEP,IAAI,CAACQ,QAAQ;MACzB,YAAY,EAAE;IAElB,CAAC;EACL,CAAC;EAED,OAAOhB,KAAK,CAAE,GAAEH,YAAa,cAAa,EAACgB,UAAU,CAAC,CAACI,IAAI,CAACC,QAAQ,IAAI;IACpE,OAAOA,QAAQ,CAACC,IAAI,EAAE;EAC1B,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IACVC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC,CAAC;AAGtC,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGzB,KAAK,IAAI;EAChC,OAAOC,KAAK,CAAE,GAAEJ,GAAI,cAAa,EAAE;IAC/BK,MAAM,EAAG,MAAM;IACfC,OAAO,EAAG;MACNC,MAAM,EAAG,kBAAkB;MAC3B,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,KAAK;EAC9B,CAAC,CAAC,CAACkB,IAAI,CAACQ,QAAQ,IAAI;IACZ,OAAOA,QAAQ,CAACN,IAAI,EAAE;EAC1B,CAAC,CAAC,CAACC,KAAK,CAACM,GAAG,IAAI;IACRJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;EACpB,CAAC,CAAC;AACd,CAAC"},"metadata":{},"sourceType":"module"}